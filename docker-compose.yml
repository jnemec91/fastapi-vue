services:
  frontend:
    build: 
      dockerfile: dockerfiles/frontend.dockerfile
    ports:
      - 80:80
    expose:
      - "8080"
      - "80"
    # volumes:
    #   - ./frontend/:/app
    env_file:
      - path: ./.env
    depends_on:
      - api
      - worker     
    restart: always
  api:
    build:
      dockerfile: dockerfiles/api.dockerfile
    expose:
      - "8000"
    ports:
      - 8000:8000
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000 # for development
    # volumes:
      # - ./ :/app
    env_file:
      - path: ./.env
    depends_on:
      pgdatabase:
        condition: service_healthy
    restart: always

  worker:
    container_name: api-celery-worker
    build:
      dockerfile: dockerfiles/api.dockerfile
    command: ./worker/celery-entrypoint.sh
    env_file:
      - path: ./.env
    depends_on:
      - api
      - redis
    restart: always

  redis:
    image: redis
    expose:
      - "6379"
  
  pgdatabase:
    image: postgres:13
    env_file:
      - path: ./.env
    expose:
      - "5432"
    volumes:
      - database_volume:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5    

volumes:
  database_volume: